#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN#include "../Doctest/doctest.h"#include <SFML/Graphics.hpp>#include "../Objects/Checkers.h"#include "../Objects/Checker.h"#include "../Objects/Dot.h"#include "../Objects/Board.h"#include "../Objects/Window.h"TEST_CASE("tiles_positions"){    for (int i = 0; i<10; i++){        for (int Wight = 1; Wight<10; Wight++){            for (int Step=0; Step<10; Step++){                for(int X0=0; X0<10; X0++){                    for (int Y0=0; Y0<10; Y0++){                        CHECK(posBoard(Wight, Step, X0, Y0, i) == sf::Vector2i {(i % Wight)*Step + X0, (i / Wight)*Step + Y0});                    }                }            }        }    }}TEST_CASE("tiles_color"){    CHECK(color(20, 8) == sf::Color(200, 200, 200));    CHECK(color(60, 8) == sf::Color(50, 50, 50));    CHECK(color(42, 8) == sf::Color(50, 50, 50));    CHECK(color(13, 8) == sf::Color(200, 200, 200));}TEST_CASE("checkers_positions"){    for (int i=0; i<12; i++){        for (int Wight=2; Wight<10; Wight++){            for (int Step=2; Step<10; Step++){                for (int dX = 0; dX<10; dX++){                    for (int dY=0; dY<10; dY++){                        CHECK(posChecker(i, Wight, Step, dX, dY).x ==                            sf::Vector2i(i % (Wight / 2) * Step * 2 +                                            Step * (i / 4 % 2) + dX,                             (i / (Wight / 2)) * Step + dY + Step * 1).x);                        CHECK(posChecker(i, Wight, Step, dX, dY).y ==                              sf::Vector2i(i % (Wight / 2) * Step * 2 +                                           Step * (i / 4 % 2) + dX,                            (i  / (Wight / 2)) * Step + dY + Step * 0).y);                    }                }            }        }    }    for (int i=12; i<24; i++){        for (int Wight=2; Wight<10; Wight++){            for (int Step=2; Step<10; Step++){                for (int dX = 0; dX<10; dX++){                    for (int dY=0; dY<10; dY++){                        CHECK(posChecker(i, Wight, Step, dX, dY).x ==                              sf::Vector2i(i % (Wight / 2) * Step * 2 +                                           Step * (i / 4 % 2) + dX,                                           (i / (Wight / 2)) * Step + dY + Step * 1).x);                        CHECK(posChecker(i, Wight, Step, dX, dY).y ==                              sf::Vector2i(i % (Wight / 2) * Step * 2 +                                           Step * (i / 4 % 2) + dX,                                           (i  / (Wight / 2)) * Step + dY + Step * 2).y);                    }                }            }        }    }}